

[ ] we need an interpolation function
    [ ] access matrices by ivec (grid) and vec (intepolation)

[ ]  Definitely rethink the way sources are being done, with tfsf in mind
    [ ] for tfsf, we need to remove field1 files in favor of something better

[ ] should IO be handled by its own class?

[ ] sources, monitors, objects... what to do when these fall out of main's scope?
    [ ] consider this: object has a pointer to field, which defaults to null.
        when object is added, pointer points to this
        when object destructor is called, have field copy the object first (this may cause problems if C++ has already deallocated some resources)
        these allocated objects will destruct when field falls out of scope


[ ] two monitor's with the same name -- seg fault

[ ] replace background object with background material

[ ] vol class should be able to create bounding surfaces

################ OLD TODO ####################################################


For all code: consider when to pass by reference
            : add destructors, etc.

Consider using an enum for output or doing output with a separate class



Output objects

Currently, field class maintains outFiles list and manages output files/nodes. This should be done by a seperate class.

Monitor does not handle a single point well - add support for this

Solve the pause at the end of the program (problem caused by H5)


Follow Rule: 1 Class per CPP file, 1 header file per CPP file
    (also change .h for .hpp)


Eliminate unnecessary includes 
    a) May be possible to move them from .h into .cpp, and simply forward declare in .h
Replace using namespace std; with indivisual usings

Separte classes in:
    field1.h
    field2.h

Data members need to be made private and/or protected
    When doing so, consider design choices in regards to get/set functions

All position vectors will become eigen vectors:
    Vector2d for real space
    Vector2i for grid space
    -performance?

Class volume will contain two vecs
Class surface will contain two vecs:
    -checking to ensure one is the same
    -having a known orientation

Bug in box_monitor... when extendable, surface monitor m1_1 is not extendable.
    A quick way to find solution: replace bool extendable with an enum class
